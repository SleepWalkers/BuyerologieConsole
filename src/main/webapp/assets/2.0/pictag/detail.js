define(function(require, exports, module) {		var common = require("base/common");	common.renderForm();	require("tpl");		var relTagTPL = [			'<div class="tpl-con">',			'	<li class="j_RelTag">',			'		<strong class="j_RelTagName rel-tag" data-tagId="${id}">${name}</strong>',			'		<input class="j_RelTagFactor rel-tag-factor" type="text" value="0"/>',			'		<b class="j_RelTagMark rel-tag-mark rel-tag-unsave">*</b>',			'		<button class="j_RelTagSave rel-tag-save" type="button">保存</button>',			'		<button class="j_RelTagDel rel-tag-del" type="button">删除</button>',			'	</li>', '</div>'].join('');	var tagList = $("#J_TagList");	return {		init : function() {			var self = this;			self._initTagTree();			self._initTagManager();		},		/**		 * 标签选择树		 */		_initTagTree : function() {			var tagTree = $("#J_TagTree").wijtree({				nodeExpanding : function(events, data) {					var node = data.node, o = node.options;					if (o.hasChildren							&& node.element.find("li:wijmo-wijtreenode").length == 0) {						$.get(common.api.tagList, {									tagTypeId : o.params.id								}, function(result) {									if (!result.isSuccess) {										alert("发生系统错误，初始化标签树失败，请稍后刷新页面重试~");										return;									}																		var tagList = result.data;									if(!tagList) return;									var addedNode = {};									for (var i = 0; i < tagList.length; i++) {										addedNode.id = tagList[i].id;										addedNode.text = tagList[i].name;										addedNode.url = "#";										addedNode.isTag = true;										data.node.add(addedNode);									}								}, "json").fail(function() {									alert("发生系统错误，初始化标签树失败，请稍后刷新页面重试~");								});					}				},				nodeClick : function(e, data) {					e.preventDefault();					var opts = data.options;					var relTagList = $(".j_RelTagName");					for (var i = 0; i < relTagList.length; i++) {						if ($(relTagList[i]).attr("data-tagId") == opts.id) {							alert("该图片已存在此标签，请不要重复添加~");							return;						}					}					tagList.append($(relTagTPL).tmpl({								id : opts.id,								name : opts.text							}));					common.renderForm();				}			});			tagTree.wijtree("add", {						text : "词库维度",						hasChildren : true,						expanded : true,						url : "javacript:void(0);",						isTag : false					});			var rootNode = tagTree.wijtree("findNodeByText", "词库维度");			$.ajax({						type : "GET",						dataType : "json",						url : common.api.tagGroupList,						success : function(tagGroupList) {							for (var i = 0; i < tagGroupList.length; i++) {								rootNode.add({											text : tagGroupList[i].typeName,											hasChildren : true,											url : "javacript:void(0);",											params : tagGroupList[i],											isTag : false										});							}						}					});		},		/**		 * 打标，删除标签		 */		_initTagManager : function() {			var self = this;			self._initTagSave();			self._initTagDel();			self._initTagFactorChange();		},		_initTagSave : function() {			tagList.delegate(".j_RelTagSave", "click", function(e) {						e.preventDefault();						var relTag = $(this).parents(".j_RelTag");						var tagFactor = relTag								.find(".j_RelTagFactor");						var factor = parseFloat($.trim(tagFactor.val()));						if (!(/^[0-9]+(\.[0-9]+){0,1}$/.test(factor))								|| isNaN(factor) || factor < 0 || factor > 10) {							alert("标签权重为0~10之间的浮点数,请修改后重新保存");							return;						}						var saveData = {							id : tagList.attr("data-id"),							relId : relTag.attr("data-relId"),							tagId : relTag.find(".j_RelTagName")									.attr("data-tagId"),							factor : factor						};						$.get(common.api.setTagOfPicTag, saveData,								function(result) {									if (!result.isSuccess) {										alert("发生系统错误，保存标签失败，请稍后重试~");										return;									}									tagFactor.attr("data-factor",factor);									var mark = relTag											.find(".j_RelTagMark");									mark.removeClass("rel-tag-unsave")											.addClass("rel-tag-saved");									setTimeout(function() {												mark														.removeClass("rel-tag-saved");											}, 1000);								}, "json").fail(function() {									alert("发生系统错误，保存标签失败，请稍后重试~");								});					});		},		_initTagDel : function() {			tagList.delegate(".j_RelTagDel", "click", function(e) {						e.preventDefault();						var relTag = $(this).parents(".j_RelTag");						var relId = relTag.attr("data-relId");												var delData = {							id : tagList.attr("data-id"),							relId : relId,							tagId : relTag.find(".j_RelTagName")									.attr("data-tagId")						};						$.get(common.api.delTagOfPicTag, delData, function(result) {									if (!result.isSuccess) {										alert("发生系统错误，删除标签失败，请稍后重试~");										return;									}									relTag.remove();								}, "json").fail(function() {									alert("发生系统错误，删除标签失败，请稍后重试~");								});					});		},		_initTagFactorChange:function(){		  tagList.delegate(".j_RelTagFactor", "mouseleave", function(e) {						e.preventDefault();						var factor = $.trim($(this).val());						var originalFactor = $(this).attr("data-factor");						var mark = $(this).parents(".j_RelTag").find(".j_RelTagMark");						if(factor!=originalFactor){						   mark.addClass("rel-tag-unsave");						}else{							mark.removeClass("rel-tag-unsave");						}					});		}	};});